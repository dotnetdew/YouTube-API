// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YouTubeApi.Persistence.Contexts;

#nullable disable

namespace YouTubeApi.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240630101607_Update2")]
    partial class Update2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("YouTubeApi.Domain.Entities.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CraetedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CraetedDate = new DateTime(2024, 6, 30, 10, 16, 7, 134, DateTimeKind.Utc).AddTicks(7978),
                            IsDeleted = false,
                            Name = "Toys, Electronics & Baby"
                        },
                        new
                        {
                            Id = 2,
                            CraetedDate = new DateTime(2024, 6, 30, 10, 16, 7, 134, DateTimeKind.Utc).AddTicks(7998),
                            IsDeleted = false,
                            Name = "Garden & Outdoors"
                        },
                        new
                        {
                            Id = 3,
                            CraetedDate = new DateTime(2024, 6, 30, 10, 16, 7, 134, DateTimeKind.Utc).AddTicks(8007),
                            IsDeleted = true,
                            Name = "Beauty"
                        });
                });

            modelBuilder.Entity("YouTubeApi.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CraetedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CraetedDate = new DateTime(2024, 6, 30, 15, 16, 7, 135, DateTimeKind.Local).AddTicks(2695),
                            IsDeleted = false,
                            Name = "Elektrik",
                            ParentId = 0,
                            Priority = 1
                        },
                        new
                        {
                            Id = 2,
                            CraetedDate = new DateTime(2024, 6, 30, 15, 16, 7, 135, DateTimeKind.Local).AddTicks(2697),
                            IsDeleted = false,
                            Name = "Moda",
                            ParentId = 0,
                            Priority = 2
                        },
                        new
                        {
                            Id = 3,
                            CraetedDate = new DateTime(2024, 6, 30, 15, 16, 7, 135, DateTimeKind.Local).AddTicks(2700),
                            IsDeleted = false,
                            Name = "Bilgisayar/Tablet",
                            ParentId = 1,
                            Priority = 1
                        },
                        new
                        {
                            Id = 4,
                            CraetedDate = new DateTime(2024, 6, 30, 15, 16, 7, 135, DateTimeKind.Local).AddTicks(2702),
                            IsDeleted = false,
                            Name = "Kadin",
                            ParentId = 2,
                            Priority = 1
                        });
                });

            modelBuilder.Entity("YouTubeApi.Domain.Entities.Detail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CraetedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Details");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CraetedDate = new DateTime(2024, 6, 30, 15, 16, 7, 138, DateTimeKind.Local).AddTicks(1345),
                            Description = "Alias perferendis dicta aliquid deleniti.",
                            IsDeleted = false,
                            Title = "Gülüyorum."
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 3,
                            CraetedDate = new DateTime(2024, 6, 30, 15, 16, 7, 138, DateTimeKind.Local).AddTicks(1395),
                            Description = "Ipsam sevindi suscipit sevindi gazete.",
                            IsDeleted = true,
                            Title = "Cezbelendi hesap."
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 4,
                            CraetedDate = new DateTime(2024, 6, 30, 15, 16, 7, 138, DateTimeKind.Local).AddTicks(1434),
                            Description = "Exercitationem hesap inventore incidunt doğru.",
                            IsDeleted = false,
                            Title = "Ekşili."
                        });
                });

            modelBuilder.Entity("YouTubeApi.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CraetedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 1,
                            CraetedDate = new DateTime(2024, 6, 30, 15, 16, 7, 141, DateTimeKind.Local).AddTicks(8818),
                            Description = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            Discount = 2.140361208584010m,
                            IsDeleted = false,
                            Price = 321.86m,
                            Title = "Tasty Fresh Chair"
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 3,
                            CraetedDate = new DateTime(2024, 6, 30, 15, 16, 7, 141, DateTimeKind.Local).AddTicks(8859),
                            Description = "Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals",
                            Discount = 9.698697109497860m,
                            IsDeleted = false,
                            Price = 520.13m,
                            Title = "Intelligent Rubber Pants"
                        });
                });

            modelBuilder.Entity("YouTubeApi.Domain.Entities.ProductCategory", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("YouTubeApi.Domain.Entities.Detail", b =>
                {
                    b.HasOne("YouTubeApi.Domain.Entities.Category", "Category")
                        .WithMany("Details")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("YouTubeApi.Domain.Entities.Product", b =>
                {
                    b.HasOne("YouTubeApi.Domain.Entities.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("YouTubeApi.Domain.Entities.ProductCategory", b =>
                {
                    b.HasOne("YouTubeApi.Domain.Entities.Category", "Category")
                        .WithMany("ProductCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YouTubeApi.Domain.Entities.Product", "Product")
                        .WithMany("ProductCategories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("YouTubeApi.Domain.Entities.Category", b =>
                {
                    b.Navigation("Details");

                    b.Navigation("ProductCategories");
                });

            modelBuilder.Entity("YouTubeApi.Domain.Entities.Product", b =>
                {
                    b.Navigation("ProductCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
