// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YouTubeApi.Persistence.Contexts;

#nullable disable

namespace YouTubeApi.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240617103805_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CategoryProduct", b =>
                {
                    b.Property<int>("CategoriesId")
                        .HasColumnType("int");

                    b.Property<int>("ProductsId")
                        .HasColumnType("int");

                    b.HasKey("CategoriesId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("CategoryProduct");
                });

            modelBuilder.Entity("YouTubeApi.Domain.Entities.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CraetedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CraetedDate = new DateTime(2024, 6, 17, 10, 38, 5, 132, DateTimeKind.Utc).AddTicks(3652),
                            IsDeleted = false,
                            Name = "Tools, Books & Clothing"
                        },
                        new
                        {
                            Id = 2,
                            CraetedDate = new DateTime(2024, 6, 17, 10, 38, 5, 132, DateTimeKind.Utc).AddTicks(3679),
                            IsDeleted = false,
                            Name = "Music & Health"
                        },
                        new
                        {
                            Id = 3,
                            CraetedDate = new DateTime(2024, 6, 17, 10, 38, 5, 132, DateTimeKind.Utc).AddTicks(3696),
                            IsDeleted = true,
                            Name = "Electronics & Garden"
                        });
                });

            modelBuilder.Entity("YouTubeApi.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CraetedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CraetedDate = new DateTime(2024, 6, 17, 15, 38, 5, 132, DateTimeKind.Local).AddTicks(6887),
                            IsDeleted = false,
                            Name = "Elektrik",
                            ParentId = 0,
                            Priority = 1
                        },
                        new
                        {
                            Id = 2,
                            CraetedDate = new DateTime(2024, 6, 17, 15, 38, 5, 132, DateTimeKind.Local).AddTicks(6891),
                            IsDeleted = false,
                            Name = "Moda",
                            ParentId = 0,
                            Priority = 2
                        },
                        new
                        {
                            Id = 3,
                            CraetedDate = new DateTime(2024, 6, 17, 15, 38, 5, 132, DateTimeKind.Local).AddTicks(6894),
                            IsDeleted = false,
                            Name = "Bilgisayar/Tablet",
                            ParentId = 1,
                            Priority = 1
                        },
                        new
                        {
                            Id = 4,
                            CraetedDate = new DateTime(2024, 6, 17, 15, 38, 5, 132, DateTimeKind.Local).AddTicks(6896),
                            IsDeleted = false,
                            Name = "Kadin",
                            ParentId = 2,
                            Priority = 1
                        });
                });

            modelBuilder.Entity("YouTubeApi.Domain.Entities.Detail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CraetedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Details");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CraetedDate = new DateTime(2024, 6, 17, 15, 38, 5, 135, DateTimeKind.Local).AddTicks(211),
                            Description = "Consequatur değirmeni dolayı gül dignissimos.",
                            IsDeleted = false,
                            Title = "Mutlu."
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 3,
                            CraetedDate = new DateTime(2024, 6, 17, 15, 38, 5, 135, DateTimeKind.Local).AddTicks(302),
                            Description = "Beğendim dergi çarpan voluptatem eius.",
                            IsDeleted = true,
                            Title = "Enim için."
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 4,
                            CraetedDate = new DateTime(2024, 6, 17, 15, 38, 5, 135, DateTimeKind.Local).AddTicks(336),
                            Description = "Incidunt aut filmini layıkıyla aut.",
                            IsDeleted = false,
                            Title = "Laudantium."
                        });
                });

            modelBuilder.Entity("YouTubeApi.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CraetedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 1,
                            CraetedDate = new DateTime(2024, 6, 17, 15, 38, 5, 137, DateTimeKind.Local).AddTicks(2430),
                            Description = "The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive",
                            Discount = 9.868114912860710m,
                            IsDeleted = false,
                            Price = 230.61m,
                            Title = "Handcrafted Granite Chair"
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 3,
                            CraetedDate = new DateTime(2024, 6, 17, 15, 38, 5, 137, DateTimeKind.Local).AddTicks(2466),
                            Description = "The beautiful range of Apple Naturalé that has an exciting mix of natural ingredients. With the Goodness of 100% Natural Ingredients",
                            Discount = 6.970545558632840m,
                            IsDeleted = false,
                            Price = 280.60m,
                            Title = "Awesome Steel Bacon"
                        });
                });

            modelBuilder.Entity("CategoryProduct", b =>
                {
                    b.HasOne("YouTubeApi.Domain.Entities.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YouTubeApi.Domain.Entities.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("YouTubeApi.Domain.Entities.Detail", b =>
                {
                    b.HasOne("YouTubeApi.Domain.Entities.Category", "Category")
                        .WithMany("Details")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("YouTubeApi.Domain.Entities.Product", b =>
                {
                    b.HasOne("YouTubeApi.Domain.Entities.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("YouTubeApi.Domain.Entities.Category", b =>
                {
                    b.Navigation("Details");
                });
#pragma warning restore 612, 618
        }
    }
}
