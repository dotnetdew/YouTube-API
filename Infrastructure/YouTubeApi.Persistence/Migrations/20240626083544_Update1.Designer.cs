// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YouTubeApi.Persistence.Contexts;

#nullable disable

namespace YouTubeApi.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240626083544_Update1")]
    partial class Update1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("YouTubeApi.Domain.Entities.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CraetedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CraetedDate = new DateTime(2024, 6, 26, 8, 35, 44, 492, DateTimeKind.Utc).AddTicks(6343),
                            IsDeleted = false,
                            Name = "Jewelery"
                        },
                        new
                        {
                            Id = 2,
                            CraetedDate = new DateTime(2024, 6, 26, 8, 35, 44, 492, DateTimeKind.Utc).AddTicks(6361),
                            IsDeleted = false,
                            Name = "Automotive"
                        },
                        new
                        {
                            Id = 3,
                            CraetedDate = new DateTime(2024, 6, 26, 8, 35, 44, 492, DateTimeKind.Utc).AddTicks(6433),
                            IsDeleted = true,
                            Name = "Jewelery, Baby & Clothing"
                        });
                });

            modelBuilder.Entity("YouTubeApi.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CraetedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CraetedDate = new DateTime(2024, 6, 26, 13, 35, 44, 492, DateTimeKind.Local).AddTicks(9589),
                            IsDeleted = false,
                            Name = "Elektrik",
                            ParentId = 0,
                            Priority = 1
                        },
                        new
                        {
                            Id = 2,
                            CraetedDate = new DateTime(2024, 6, 26, 13, 35, 44, 492, DateTimeKind.Local).AddTicks(9593),
                            IsDeleted = false,
                            Name = "Moda",
                            ParentId = 0,
                            Priority = 2
                        },
                        new
                        {
                            Id = 3,
                            CraetedDate = new DateTime(2024, 6, 26, 13, 35, 44, 492, DateTimeKind.Local).AddTicks(9596),
                            IsDeleted = false,
                            Name = "Bilgisayar/Tablet",
                            ParentId = 1,
                            Priority = 1
                        },
                        new
                        {
                            Id = 4,
                            CraetedDate = new DateTime(2024, 6, 26, 13, 35, 44, 492, DateTimeKind.Local).AddTicks(9599),
                            IsDeleted = false,
                            Name = "Kadin",
                            ParentId = 2,
                            Priority = 1
                        });
                });

            modelBuilder.Entity("YouTubeApi.Domain.Entities.Detail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CraetedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Details");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CraetedDate = new DateTime(2024, 6, 26, 13, 35, 44, 495, DateTimeKind.Local).AddTicks(6826),
                            Description = "Için türemiş tempora öyle kapının.",
                            IsDeleted = false,
                            Title = "Yazın."
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 3,
                            CraetedDate = new DateTime(2024, 6, 26, 13, 35, 44, 495, DateTimeKind.Local).AddTicks(6882),
                            Description = "Sarmal değerli alias dignissimos exercitationem.",
                            IsDeleted = true,
                            Title = "Qui totam."
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 4,
                            CraetedDate = new DateTime(2024, 6, 26, 13, 35, 44, 495, DateTimeKind.Local).AddTicks(6928),
                            Description = "Minima karşıdakine aliquid inventore et.",
                            IsDeleted = false,
                            Title = "Eve."
                        });
                });

            modelBuilder.Entity("YouTubeApi.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CraetedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 1,
                            CraetedDate = new DateTime(2024, 6, 26, 13, 35, 44, 499, DateTimeKind.Local).AddTicks(5557),
                            Description = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            Discount = 5.82223553586390m,
                            IsDeleted = false,
                            Price = 206.27m,
                            Title = "Small Metal Ball"
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 3,
                            CraetedDate = new DateTime(2024, 6, 26, 13, 35, 44, 499, DateTimeKind.Local).AddTicks(5600),
                            Description = "New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart",
                            Discount = 6.737917100530440m,
                            IsDeleted = false,
                            Price = 906.74m,
                            Title = "Gorgeous Soft Gloves"
                        });
                });

            modelBuilder.Entity("YouTubeApi.Domain.Entities.ProductCategory", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("YouTubeApi.Domain.Entities.Detail", b =>
                {
                    b.HasOne("YouTubeApi.Domain.Entities.Category", "Category")
                        .WithMany("Details")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("YouTubeApi.Domain.Entities.Product", b =>
                {
                    b.HasOne("YouTubeApi.Domain.Entities.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("YouTubeApi.Domain.Entities.ProductCategory", b =>
                {
                    b.HasOne("YouTubeApi.Domain.Entities.Category", "Category")
                        .WithMany("ProductCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YouTubeApi.Domain.Entities.Product", "Product")
                        .WithMany("ProductCategories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("YouTubeApi.Domain.Entities.Category", b =>
                {
                    b.Navigation("Details");

                    b.Navigation("ProductCategories");
                });

            modelBuilder.Entity("YouTubeApi.Domain.Entities.Product", b =>
                {
                    b.Navigation("ProductCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
